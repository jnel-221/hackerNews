{"version":3,"sources":["components/HeaderNav.js","components/Card.js","utils/helpers/formatDate.js","utils/helpers/setStorage.js","pages/Search.js","components/List.js","pages/History.js","App.js","index.js"],"names":["Headernav","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","as","Link","to","Toggle","Collapse","id","Nav","className","Cards","results","map","result","i","Card","Body","Title","title","Subtitle","author","date","href","url","target","FormatDate","dt","Moment","format","setStorage","query","history","JSON","parse","sessionStorage","getItem","setItem","stringify","Search","search","useRef","useState","setResults","value","setValue","handleSubmit","e","preventDefault","current","trim","axios","get","then","res","stories","data","hits","story","created_at","alert","InputGroup","onKeyPress","charCode","FormControl","placeholder","ref","onChange","Button","type","onClick","List","savedSearches","ListGroup","item","Item","History","saved","list","setList","clear","App","basename","process","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e0eb450.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\n\nfunction Headernav() {\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand as={Link} to=\"/\">\n          Hacker News\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"me-auto\">\n            <Nav.Link as={Link} to=\"/\">\n              Search the News\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/history\">\n              View Search History\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Headernav;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nfunction Cards({ results }) {\n  return (\n    <>\n      {results.map((result, i) => (\n        <Card className=\"m-3\" key={i}>\n          <Card.Body>\n            <Card.Title>{result.title}</Card.Title>\n            <Card.Subtitle>by {result.author}</Card.Subtitle>\n            <Card.Subtitle className=\"mt-1\">\n              created {result.date}\n            </Card.Subtitle>\n            <Card.Link href={result.url} target=\"_blank\">\n              View Story\n            </Card.Link>\n          </Card.Body>\n        </Card>\n      ))}\n    </>\n  );\n}\n\nexport default Cards;\n","import Moment from \"moment\";\n\n\n//use MM/DD/YYYY format for dates\nfunction FormatDate(dt) {\n  return Moment(dt).format(\"L\");\n}\n\nexport default FormatDate;\n","//store searches in session storage\nfunction setStorage(query) {\n  let history = JSON.parse(sessionStorage.getItem(\"mySearches\")) || [];\n  if (query !== \"\") {\n    history = [query, ...history];\n\n    sessionStorage.setItem(\"mySearches\", JSON.stringify(history));\n  }\n}\n\nexport default setStorage;\n","import React, { useState, useRef } from \"react\";\nimport Headernav from \"../components/HeaderNav\";\nimport { InputGroup, FormControl, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Cards from \"../components/Card\";\nimport FormatDate from \"../utils/helpers/formatDate.js\";\nimport setStorage from \"../utils/helpers/setStorage.js\";\n\nfunction Search() {\n  const search = useRef(null);\n  const [results, setResults] = useState([]);\n  const [value, setValue] = useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    let query = search.current.value.trim();\n\n    if (query !== \"\") {\n      axios\n        .get(`https://hn.algolia.com/api/v1/search?query=${query}&tags=story`)\n        .then((res) => {\n          const stories = res.data.hits;\n\n          setResults(stories);\n          setResults((stories) => {\n            return stories;\n          });\n          parseResults(stories);\n        });\n    } else {\n      alert(\"Please enter search terms to get results\");\n    }\n    setStorage(query);\n    clearState();\n  }\n\n  function parseResults(arr) {\n    setResults(\n      arr.map((story) => {\n        return {\n          title: story.title,\n          author: story.author,\n          url: story.url,\n          date: FormatDate(story.created_at),\n        };\n      })\n    );\n  }\n\n  function clearState() {\n    setValue(\"\");\n  }\n\n  function handleKeypress(e) {\n    if (e.charCode === 13) {\n      handleSubmit(e);\n    }\n  }\n  return (\n    <>\n      <Headernav />\n      <InputGroup\n        className=\"mt-3 mb-4 px-5\"\n        id=\"search-term\"\n        onKeyPress={handleKeypress}\n      >\n        <FormControl\n          placeholder=\"Search for Articles\"\n          aria-label=\"Search for Articles\"\n          aria-describedby=\"basic-addon2\"\n          value={value}\n          ref={search}\n          onChange={(e) => setValue(e.target.value.trim())}\n        />\n        <Button\n          variant=\"outline-warning\"\n          id=\"button-addon2\"\n          type=\"submit\"\n          onClick={handleSubmit}\n        >\n          Search\n        </Button>\n      </InputGroup>\n      <Cards results={results} />\n    </>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\n\nfunction List({ savedSearches }) {\n  return (\n    <ListGroup className=\"m-3\">\n      {savedSearches.map((item, i) => (\n        <ListGroup.Item key={i}>{item}</ListGroup.Item>\n      ))}\n    </ListGroup>\n  );\n}\n\nexport default List;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Headernav from \"../components/HeaderNav\";\nimport List from \"../components/List\";\n\nfunction History() {\n  const [list, setList] = useState(() => {\n    const saved = sessionStorage.getItem(\"mySearches\");\n    const savedSearches = JSON.parse(saved);\n    return savedSearches || [];\n  });\n\n  function handleClick(e){\n    e.preventDefault();\n    sessionStorage.clear();\n    setList([]);\n  }\n\n  return (\n    <>\n      <Headernav />\n      <h2 className=\"m-3\">Search History</h2>\n      <List savedSearches={list} />\n      <Button variant=\"warning\" className=\"m-3\" type=\"submit\" onClick={handleClick}>Clear History</Button>\n    </>\n  );\n}\n\nexport default History;\n","import React from \"react\";\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Search from \"./pages/Search\";\nimport History from \"./pages/History\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path ={[\"/\"]}>\n          <Search/>\n        </Route>\n        <Route exact path ={[\"/history\"]}>\n          <History/>\n        </Route>\n      </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}